data: data.yaml
logger: logger.yaml
trainer:
  max_steps: 50000
  log_every_n_steps: 20
  precision: bf16-true
  gradient_clip_val: 1
  gradient_clip_algorithm: norm
#  strategy: ddp
  callbacks:
  - class_path: luolib.lightning.callbacks.ModelCheckpoint
    init_args:
      every_n_train_steps: 1000
      filename: "{step}"
      save_top_k: -1
      save_last: true
      verbose: true
optim:
  param_groups:
  - prefix: ['']
  optimizer:
    class_path: torch.optim.AdamW
    init_args:
      lr: 1e-4
      weight_decay: 0.01
  lr_scheduler:
    scheduler:
      class_path: timm.scheduler.CosineLRScheduler
      init_args:
        t_initial: ${trainer.max_steps}
        t_in_epochs: false
        warmup_t: 0
        warmup_prefix: true
    interval: step
    frequency: 250
model:
  sam:
    class_path: mmmm.models.build_sam
    init_args:
      patch_size: 16
      pos_embed_shape: [8, 32, 32]
      pt_in_channels: 1
      pt_patch_size: [4, 16, 16]
      pt_pos_embed_shape: [8, 16, 16]
      checkpoint: pre-trained/SegVol/pytorch_model.bin
      weight_prefix: model.
  loss:
    class_path: mmmm.models.loss.DiceFocalLoss
    init_args:
      dice_weight: 1
      focal_weight: 2
      focal_gamma: 2
      focal_alpha: 0.8
  seg_vol_path: pre-trained/SegVol
  freeze_clip: true
