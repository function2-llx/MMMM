data: data.yaml
tokenizer: ../tokenizer.yaml
logger: logger.yaml
trainer:
  max_steps: 50000
  log_every_n_steps: 20
  precision: bf16-true
  gradient_clip_val: 1
  gradient_clip_algorithm: norm
  save_embedding_layers: true
  strategy:
    class_path: lightning.pytorch.strategies.DDPStrategy
    init_args:
      broadcast_buffers: false
      static_graph: true
      gradient_as_bucket_view: true
  callbacks:
  - class_path: luolib.lightning.callbacks.ModelCheckpoint
    init_args:
      every_n_train_steps: 2500
      filename: "{step}"
      save_top_k: -1
      save_last: true
      verbose: true
optim:
  sam:
    prefix: sam_model
    optimizer:
      class_path: torch.optim.AdamW
      init_args:
        lr: 1e-4
        weight_decay: 5e-2
    lr_scheduler:
      scheduler:
        class_path: timm.scheduler.CosineLRScheduler
        init_args:
          t_initial: ${trainer.max_steps}
          t_in_epochs: false
          warmup_t: 2000
          warmup_prefix: true
      interval: step
      frequency: 500
  seg_proj:
    prefix: seg_proj
    optimizer:
      class_path: torch.optim.AdamW
      init_args:
        lr: 1e-4
        weight_decay: 5e-2
    lr_scheduler:
      scheduler:
        class_path: timm.scheduler.CosineLRScheduler
        init_args:
          t_initial: ${trainer.max_steps}
          t_in_epochs: false
          warmup_t: 0
          warmup_prefix: true
      interval: step
      frequency: 500
  default:
    optimizer:
      class_path: torch.optim.AdamW
      init_args:
        lr: 5e-5
        weight_decay: 5e-2
    lr_scheduler:
      scheduler:
        class_path: timm.scheduler.CosineLRScheduler
        init_args:
          t_initial: ${trainer.max_steps}
          t_in_epochs: false
          warmup_t: 0
          warmup_prefix: true
      interval: step
      frequency: 500
mask_loss:
  lambda_focal: 1
